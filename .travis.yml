language: python
python: 3.7

jobs:
  include:
    - if: branch = master
      env: TOXENV=py37-master
      after_success: codecov
    - if: branch != master
      env: TOXENV=py37-dev
      after_success: codecov
    - env: TOXENV=build
    - env: TOXENV=pre-commit
    - stage: Deploy to Test PyPI release
      env: TOXENV=build
      before_script: sed -i -E "s/^([0-9]+\.[0-9]+\.[0-9]+)$/\1.$TRAVIS_BUILD_NUMBER/" version.txt
      deploy:
        distributions: skip
        skip_cleanup: true
        provider: pypi
        server: https://test.pypi.org/legacy/
        user: "__token__"
        password:
          secure: ""
        on:
          branch: dev
    - stage: Deploy to PyPI release
      env: TOXENV=build
      deploy:
        distributions: skip
        skip_cleanup: true
        provider: pypi
        server: https://test.pypi.org/legacy/
        user: "__token__"
        password:
          secure: ""
        on:
          tags: true
    - stage: Create GitHub release
      env: TOXENV=build
      before_deploy:
        - export AUTHOR_EMAIL="$(git log -1 $TRAVIS_COMMIT --pretty="%cE")"
        - export AUTHOR_NAME="$(git log -1 $TRAVIS_COMMIT --pretty="%aN")"
        - export GIT_TAG="$(cat version.txt | tr -d ' \t\n\r')"
        - git config --local user.name $AUTHOR_NAME
        - git config --local user.email $AUTHOR_EMAIL
        - git tag $GIT_TAG
      deploy:
        provider: releases
        skip_cleanup: true
        draft: true
        api_key:
          secure: ""
        file_glob: true
        file: dist/*
        name: cloudshell-cp-maas $GIT_TAG
        target_commitish: master
        on:
          branch: master
    - stage: Check version
      language: bash
      install:
        - git clone https://github.com/$TRAVIS_REPO_SLUG.git $TRAVIS_REPO_SLUG
        - cd $TRAVIS_REPO_SLUG
        - git checkout -qf $TRAVIS_PULL_REQUEST_BRANCH
      script: "! git diff --exit-code --quiet origin/master version.txt"

install:
  - pip install tox
  - pip install codecov

script: tox

stages:
  - name: Check version
    if: branch = master AND type = pull_request
  - name: Test
  - name: Deploy to Test PyPI release
    if: branch = dev AND type != pull_request
  - name: Create GitHub release
    if: branch = master AND type != pull_request
  - name: Deploy to PyPI release
    if: tag IS present
